name: Build and Publish Rocks to GHCR

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:

  tag-rocks:
    uses: ./.github/workflows/tag-rocks.yaml

  get-runners:
    runs-on: ubuntu-latest
    outputs:
      arch-map: ${{ steps.set-map.outputs.arch-map }}
    steps:
      - id: set-map
        run: |
          if [[ "${{ github.repository_owner }}" == "canonical" ]]; then
            echo 'arch-map={"amd64":["noble","X64","large"],"arm64":["noble","ARM64","large"]}' >> $GITHUB_OUTPUT
          else
            echo 'arch-map={"amd64":["ubuntu-24.04"],"arm64":["ubuntu-24.04-arm"]}' >> $GITHUB_OUTPUT
          fi

  parse-build-trigger:
    runs-on: ubuntu-latest
    outputs:
      build-matrix: ${{ steps.parse-build-trigger.outputs.build-matrix }}
      publish-matrix: ${{ steps.parse-build-trigger.outputs.publish-matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: Checkout OCI Factory
        uses: actions/checkout@v4
        with:
          repository: canonical/oci-factory
          fetch-depth: 1
          ref: ROCKS-2186/user-defined-registry
          path: oci-factory
      - name: Install Python dependencies
        run: python3 -m pip install -r oci-factory/src/image/requirements.txt
      - id: parse-build-trigger
        run: |
          python3 -m oci-factory.src.image.parse_image_build_trigger \
            --image-trigger image.yaml

  build:
    needs: [get-runners, parse-build-trigger]
    strategy:
      matrix: ${{ fromJSON(needs.parse-build-trigger.outputs.build-matrix) }}
    uses: canonical/oci-factory/.github/workflows/Build-Rock.yaml@main
    with:
      rock-repo: ${{ github.repository }}
      rock-repo-commit: ${{ github.ref }}
      rockfile-directory: ${{ matrix.location }}
      oci-archive-name: ${{ matrix.artifact-name }}
      arch-map: ${{ needs.get-runners.outputs.arch-map }}

  test:
    needs: [build, parse-build-trigger]
    strategy:
      matrix: ${{ fromJSON(needs.parse-build-trigger.outputs.build-matrix) }}
    uses: canonical/oci-factory/.github/workflows/Test-Rock.yaml@fix-test-oci-compliance
    with:
      oci-archive-name: ${{ matrix.artifact-name }}

  upload:
    needs: [test, parse-build-trigger]
    strategy:
      matrix: ${{ fromJSON(needs.parse-build-trigger.outputs.publish-matrix) }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:

      - name: Upload Rock to GHCR
        uses: canonical/oci-factory/.github/actions/upload-rock@main
        with:
          artifact_name: ${{ matrix.artifact-name }}
          tags: ${{ matrix.tag }}
          name: ${{ github.repository }}
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to registries
        uses: canonical/oci-factory/.github/actions/upload-rock@main
        with:
          artifact_name: ${{ matrix.artifact-name }}
          tags: ${{ matrix.tag }}
          name: ${{ matrix.namespace }}/${{ matrix.image-name }}
          registry: ${{ matrix.registry }}
          username: ${{ secrets[format('{0}USR', matrix.secret-prefix)] }}
          password: ${{ secrets[format('{0}PSW', matrix.secret-prefix)] }}
        