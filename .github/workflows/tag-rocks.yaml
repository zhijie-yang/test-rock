name: Tag Rocks

on:
  workflow_call:
    outputs:
      json_result:
        description: "JSON array of rockcraft.yaml metadata"
        value: ${{ jobs.tag-rocks.outputs.json_result }}

jobs:
  tag-rocks:
    runs-on: ubuntu-latest
    outputs:
      json_result: ${{ steps.generate.outputs.json_result }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate rocks list with its tag in JSON format
        id: generate
        run: |
          output="[]"
          while IFS= read -r -d '' file; do
            name=$(yq '.name' "$file")
            version=$(yq '.version' "$file")
            base=$(yq '.base' "$file")
            location=$(dirname "$file" | sed 's|^\./||')
            channel="edge"

            if [[ "$base" == "bare" ]]; then
              base=$(yq '.build-base' "$file")
            fi

            base=$(echo "$base" | sed 's/[^0-9.]//g')

            if [[ "$version" == "latest" ]]; then
              tag="latest"
              echo "::warning file=$file::Using 'latest' as version â€” tag set to 'latest'"
            else
              tag="${version}-${base}_${channel}"
            fi

            entry=$(jq -n \
              --arg name "$name" \
              --arg version "$version" \
              --arg tag "$tag" \
              --arg location "$location" \
              '{name: $name, version: $version, tag: $tag, location: $location}')

            output=$(jq ". + [ $entry ]" <<< "$output")
          done < <(find . -type f -name rockcraft.yaml -print0)

          echo "$output" > rocks.json
          echo 'json_result<<EOF' >> "$GITHUB_OUTPUT"
          cat rocks.json >> "$GITHUB_OUTPUT"
          echo 'EOF' >> "$GITHUB_OUTPUT"

